@inherits GridElement

<style>
	.@UniqueClassCssForClipContainer {
		cursor: @CursorMode;
	}
</style>

@{
	base.BuildRenderTree(__builder);
}

@code {
	static string GetDefaultGripStyle(string imageName) => $"background-color: rgb(229, 231, 235); background-repeat: no-repeat; background-position: 50%; background-image: url(./_content/BpfLayout/{imageName}.png);";

	static RenderFragment DefaultVerticalGrip =@<div style="@GetDefaultGripStyle("vertical")"></div>;

	static RenderFragment DefaultHorizontalGrip =@<div style="@GetDefaultGripStyle("horizontal")"></div>;

	bool IsHorizontal => Row > 0;

	string CursorMode => IsHorizontal ? "row-resize" : "col-resize";

	public override async Task SetParametersAsync(ParameterView parameters)
	{		
		await base.SetParametersAsync(parameters);
		ChildContent ??= IsHorizontal ? DefaultHorizontalGrip : DefaultVerticalGrip;
	}

	protected override void OnInitialized()
	{
		Parent.AddSplitter(this);
		base.OnInitialized();
	}

	public void Dispose()
	{
		Parent?.RemoveSplitter(this);
	}
}
